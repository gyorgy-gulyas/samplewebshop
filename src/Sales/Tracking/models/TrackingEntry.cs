
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using Sales.Tracking;

namespace Sales.Tracking.OrderTrackingEntry
{
	public partial class TrackingEntry : IEquatable<TrackingEntry>
	{
		public TrackingStatuses TrackingStatus { get; set; }
		public string statusDate { get; set; }
		public string orderId { get; set; }

		#region Clone 
		public virtual TrackingEntry Clone()
		{
			TrackingEntry clone = new();

			clone.TrackingStatus = TrackingStatus;
			clone.statusDate = new string(statusDate.ToCharArray());
			clone.orderId = new string(orderId.ToCharArray());

			return clone;
		}
		#endregion Clone 

		#region Equals & HashCode 
		public bool Equals( TrackingEntry other )
		{
			if (other is null) return false;

			if(TrackingStatus != other.TrackingStatus) return false;
			if(statusDate != other.statusDate) return false;
			if(orderId != other.orderId) return false;

			return true;
		}

		public override bool Equals(object obj) => Equals(obj as TrackingEntry);

		public override int GetHashCode()
		{
			var hash = new HashCode();
			hash.Add(TrackingStatus);
			hash.Add(statusDate);
			hash.Add(orderId);

			return hash.ToHashCode();
		}
		#endregion Equals & HashCode 
	}

}
