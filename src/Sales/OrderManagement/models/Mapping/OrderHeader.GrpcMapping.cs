
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

using Google.Protobuf.Collections;
using Sales.OrderManagement;
using System.Globalization;

namespace Sales.OrderManagement.Order
{
	public partial class OrderHeader
	{
		public static Protos.OrderHeader ToGrpc( OrderHeader @this )
		{
			Protos.OrderHeader result = new();

			// unfold begin: SalesDocument
			result.HumanKey = @this.humanKey;
			result.PartnerData = @this.partnerData;
			// unfold end SalesDocument

			// unfold begin: Base
			result.Id = @this.Id;
			result.PartionKey = @this.partionKey;
			// unfold end Base

			result.CustomerId = @this.customerId;
			result.OrderingDate = @this.orderingDate.ToString(CultureInfo.InvariantCulture);
			result.Status = @this.status.ToGrpc();
			result.TotalPrice = @this.totalPrice.ToString(CultureInfo.InvariantCulture);
			result.Datelist.AddRange( @this.datelist.Select( v => v.ToString(CultureInfo.InvariantCulture) ));
			result.Intlist.AddRange( @this.intlist);
			result.Datemap.Add(@this.datemap.ToDictionary( kvp => kvp.Key, kvp => kvp.Value.ToString(CultureInfo.InvariantCulture)));
			result.Intmap.Add(@this.intmap);
			result.Itemmap.Add( @this.itemmap.ToDictionary( kvp => kvp.Key, kvp => OrderItem.ToGrpc( kvp.Value ) ));
			result.Items.AddRange( @this.items.Select( v => OrderItem.ToGrpc( v ) ));
			result.Item = @this.item != null ? OrderItem.ToGrpc( @this.item) : null;

			return result;
		}
		public static OrderHeader FromGrpc( Protos.OrderHeader @from )
		{
			OrderHeader result = new();

			result.customerId = @from.CustomerId;
			result.orderingDate = DateOnly.Parse(@from.OrderingDate, CultureInfo.InvariantCulture);
			result.status = @from.Status.FromGrpc();
			result.totalPrice = decimal.Parse(@from.TotalPrice, CultureInfo.InvariantCulture);
			result.datelist.AddRange( @from.Datelist.Select( v => DateOnly.Parse(v, CultureInfo.InvariantCulture) ));
			result.intlist.AddRange( @from.Intlist);
			foreach( var kvp in @from.Datemap)
				result.datemap[kvp.Key] = DateOnly.Parse(kvp.Value, CultureInfo.InvariantCulture);
			foreach( var kvp in @from.Intmap)
				result.intmap[kvp.Key] = kvp.Value;
;
			result.items.AddRange( @from.Items.Select( v => OrderItem.FromGrpc(v) ));
			result.item = @from.Item != null ? OrderItem.FromGrpc( @from.Item) : null;

			return result;
		}
	}
}
