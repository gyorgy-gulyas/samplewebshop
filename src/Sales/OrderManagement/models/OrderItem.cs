
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>


namespace Sales.OrderManagement.Order
{
	public partial class OrderItem : IEquatable<OrderItem>
	{
		public string productId { get; set; }
		public string productName { get; set; }
		public decimal quantity { get; set; }
		public decimal UnitPrice { get; set; }
		public string subTotalPrice { get; set; }

		#region Clone 
		public virtual OrderItem Clone()
		{
			OrderItem clone = new();

			clone.productId = new string(productId.ToCharArray());
			clone.productName = new string(productName.ToCharArray());
			clone.quantity = quantity;
			clone.UnitPrice = UnitPrice;
			clone.subTotalPrice = new string(subTotalPrice.ToCharArray());

			return clone;
		}
		#endregion Clone 

		#region Equals & HashCode 
		public bool Equals( OrderItem other )
		{
			if (other is null) return false;

			if(productId != other.productId) return false;
			if(productName != other.productName) return false;
			if(quantity != other.quantity) return false;
			if(UnitPrice != other.UnitPrice) return false;
			if(subTotalPrice != other.subTotalPrice) return false;

			return true;
		}

		public override bool Equals(object obj) => Equals(obj as OrderItem);

		public override int GetHashCode()
		{
			var hash = new HashCode();
			hash.Add(productId);
			hash.Add(productName);
			hash.Add(quantity);
			hash.Add(UnitPrice);
			hash.Add(subTotalPrice);

			return hash.ToHashCode();
		}
		#endregion Equals & HashCode 
	}

}
