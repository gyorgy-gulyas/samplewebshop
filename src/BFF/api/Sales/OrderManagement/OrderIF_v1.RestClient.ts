
// <auto-generated>
//     This code was generated by d3i.interpreter
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

import { AxiosError } from 'axios';
import { BFFRestClient } from "../../BFFRestClient";
import * as OrderIF_v1 from "../../../types/Sales/OrderManagement/OrderIF_v1";
import System.Globalization;
import Decimal from "decimal.js";

const apiClient = BFFRestClient.getInstance().apiClient

export const OrderIF = {
	V1: {
	async setPrice(
		orderItem:OrderIF_v1.OrderItemDTO,
		price:Decimal	) : Promise<OrderIF_v1.OrderItemDTO>
	{
		try{
		
		}
		catch( error: AxiosError ) {
			throw apiClient.mapApiError(error, "setPrice");
		}
	}
	,
	async multiPart(
		order:OrderIF_v1.OrderDTO,
		orderitem:OrderIF_v1.OrderItemDTO	) : Promise<OrderIF_v1.OrderDTO>
	{
		try{
			// build multi part content
			const formData = new FormData();
			formData.append( "_json_order", JSON.stringify(order), "_json_order.json");
			formData.append( "_json_orderitem", JSON.stringify(orderitem), "_json_orderitem.json");
		
		}
		catch( error: AxiosError ) {
			throw apiClient.mapApiError(error, "multiPart");
		}
	}
	,
		///getting the order based on id
	async getOrder(
		orderId:string	) : Promise<OrderIF_v1.OrderDTO>
	{
		try{
		
		}
		catch( error: AxiosError ) {
			throw apiClient.mapApiError(error, "getOrder");
		}
	}
	,
	async placeOrder(
		order:OrderIF_v1.OrderDTO	) : Promise<OrderIF_v1.OrderDTO>
	{
		try{
		
		}
		catch( error: AxiosError ) {
			throw apiClient.mapApiError(error, "placeOrder");
		}
	}
	,
	async justOrder(
		orderId:string	) : Promise<{}>
	{
		try{
		
		}
		catch( error: AxiosError ) {
			throw apiClient.mapApiError(error, "justOrder");
		}
	}
	,
	}
}
